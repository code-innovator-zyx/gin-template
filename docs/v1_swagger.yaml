basePath: /api/v1
definitions:
  model.User:
    description: 用户信息模型
    properties:
      avatar:
        example: https://example.com/avatar.jpg
        type: string
      created_at:
        example: "2023-01-01T00:00:00Z"
        type: string
      email:
        example: john@example.com
        type: string
      id:
        example: 1
        type: integer
      nickname:
        example: John Doe
        type: string
      roles:
        items:
          $ref: '#/definitions/rbac.Role'
        type: array
      status:
        example: 1
        type: integer
      updated_at:
        example: "2023-01-01T00:00:00Z"
        type: string
      username:
        example: johndoe
        type: string
    type: object
  rbac.Permission:
    properties:
      created_at:
        type: string
      description:
        type: string
      id:
        type: integer
      method:
        type: string
      name:
        type: string
      path:
        type: string
      updated_at:
        type: string
    type: object
  rbac.Role:
    description: 角色信息模型
    properties:
      created_at:
        type: string
      description:
        example: 系统管理员
        type: string
      id:
        example: 1
        type: integer
      name:
        example: admin
        type: string
      updated_at:
        type: string
    type: object
  rbac.RoleMenu:
    properties:
      created_at:
        type: string
      id:
        type: integer
      menu_id:
        type: integer
      role_id:
        type: integer
      updated_at:
        type: string
    type: object
  rbac.RolePermission:
    properties:
      created_at:
        type: string
      id:
        type: integer
      permission_id:
        type: integer
      role_id:
        type: integer
      updated_at:
        type: string
    type: object
  rbac.UserRole:
    properties:
      created_at:
        type: string
      id:
        type: integer
      role_id:
        type: integer
      updated_at:
        type: string
      user_id:
        type: integer
    type: object
  response.Response:
    properties:
      code:
        description: 业务状态码
        type: integer
      data:
        description: 数据
      message:
        description: 提示信息
        type: string
    type: object
  user.LoginRequest:
    properties:
      password:
        example: password123
        type: string
      username:
        example: johndoe
        type: string
    required:
    - password
    - username
    type: object
  user.RegisterRequest:
    properties:
      email:
        example: john@example.com
        type: string
      nickname:
        example: John Doe
        type: string
      password:
        example: password123
        type: string
      username:
        example: johndoe
        type: string
    required:
    - email
    - password
    - username
    type: object
info:
  contact:
    email: support@swagger.io
    name: API Support
    url: http://www.swagger.io/support
  description: This is a sample server.
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  termsOfService: http://swagger.io/terms/
  title: Swagger Example API
  version: "1.0"
paths:
  /rbac/permissions:
    get:
      consumes:
      - application/json
      description: 获取系统中所有权限的列表
      produces:
      - application/json
      responses:
        "200":
          description: 成功获取权限列表
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                data:
                  items:
                    $ref: '#/definitions/rbac.Permission'
                  type: array
              type: object
        "500":
          description: 服务器内部错误
          schema:
            $ref: '#/definitions/response.Response'
      summary: 获取权限列表
      tags:
      - RBAC-权限管理
    post:
      consumes:
      - application/json
      description: 创建新的系统权限
      parameters:
      - description: 权限信息
        in: body
        name: permission
        required: true
        schema:
          $ref: '#/definitions/rbac.Permission'
      produces:
      - application/json
      responses:
        "201":
          description: 成功创建权限
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                data:
                  $ref: '#/definitions/rbac.Permission'
              type: object
        "400":
          description: 请求参数错误
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: 服务器内部错误
          schema:
            $ref: '#/definitions/response.Response'
      summary: 创建权限
      tags:
      - RBAC-权限管理
  /rbac/role-menus:
    post:
      consumes:
      - application/json
      description: 为指定角色分配菜单
      parameters:
      - description: 角色菜单信息
        in: body
        name: roleMenu
        required: true
        schema:
          $ref: '#/definitions/rbac.RoleMenu'
      produces:
      - application/json
      responses:
        "201":
          description: 成功分配菜单
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                data:
                  $ref: '#/definitions/rbac.RoleMenu'
              type: object
        "400":
          description: 请求参数错误
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: 服务器内部错误
          schema:
            $ref: '#/definitions/response.Response'
      summary: 分配菜单给角色
      tags:
      - RBAC-角色菜单管理
  /rbac/role-permissions:
    post:
      consumes:
      - application/json
      description: 为指定角色分配权限
      parameters:
      - description: 角色权限信息
        in: body
        name: rolePermission
        required: true
        schema:
          $ref: '#/definitions/rbac.RolePermission'
      produces:
      - application/json
      responses:
        "201":
          description: 成功分配权限
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                data:
                  $ref: '#/definitions/rbac.RolePermission'
              type: object
        "400":
          description: 请求参数错误
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: 服务器内部错误
          schema:
            $ref: '#/definitions/response.Response'
      summary: 分配权限给角色
      tags:
      - RBAC-角色权限管理
  /rbac/roles:
    get:
      consumes:
      - application/json
      description: 获取系统中所有角色的列表
      produces:
      - application/json
      responses:
        "200":
          description: 成功获取角色列表
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                data:
                  items:
                    $ref: '#/definitions/rbac.Role'
                  type: array
              type: object
        "500":
          description: 服务器内部错误
          schema:
            $ref: '#/definitions/response.Response'
      summary: 获取角色列表
      tags:
      - RBAC-角色管理
    post:
      consumes:
      - application/json
      description: 创建新的系统角色
      parameters:
      - description: 角色信息
        in: body
        name: role
        required: true
        schema:
          $ref: '#/definitions/rbac.Role'
      produces:
      - application/json
      responses:
        "201":
          description: 成功创建角色
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                data:
                  $ref: '#/definitions/rbac.Role'
              type: object
        "400":
          description: 请求参数错误
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: 服务器内部错误
          schema:
            $ref: '#/definitions/response.Response'
      summary: 创建角色
      tags:
      - RBAC-角色管理
  /rbac/roles/{id}:
    delete:
      consumes:
      - application/json
      description: 根据ID删除角色
      parameters:
      - description: 角色ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "204":
          description: 成功删除角色
          schema:
            $ref: '#/definitions/response.Response'
        "400":
          description: 无效的角色ID
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: 服务器内部错误
          schema:
            $ref: '#/definitions/response.Response'
      summary: 删除角色
      tags:
      - RBAC-角色管理
    get:
      consumes:
      - application/json
      description: 根据ID获取角色详细信息
      parameters:
      - description: 角色ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: 成功获取角色详情
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                data:
                  $ref: '#/definitions/rbac.Role'
              type: object
        "400":
          description: 无效的角色ID
          schema:
            $ref: '#/definitions/response.Response'
        "404":
          description: 角色不存在
          schema:
            $ref: '#/definitions/response.Response'
      summary: 获取角色详情
      tags:
      - RBAC-角色管理
    put:
      consumes:
      - application/json
      description: 根据ID更新角色信息
      parameters:
      - description: 角色ID
        in: path
        name: id
        required: true
        type: integer
      - description: 角色信息
        in: body
        name: role
        required: true
        schema:
          $ref: '#/definitions/rbac.Role'
      produces:
      - application/json
      responses:
        "200":
          description: 成功更新角色
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                data:
                  $ref: '#/definitions/rbac.Role'
              type: object
        "400":
          description: 无效的角色ID或请求参数错误
          schema:
            $ref: '#/definitions/response.Response'
        "404":
          description: 角色不存在
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: 服务器内部错误
          schema:
            $ref: '#/definitions/response.Response'
      summary: 更新角色
      tags:
      - RBAC-角色管理
  /rbac/roles/{role_id}/menus/{menu_id}:
    delete:
      consumes:
      - application/json
      description: 从指定角色移除指定菜单
      parameters:
      - description: 角色ID
        in: path
        name: role_id
        required: true
        type: integer
      - description: 菜单ID
        in: path
        name: menu_id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "204":
          description: 成功移除菜单
          schema:
            $ref: '#/definitions/response.Response'
        "400":
          description: 无效的角色ID或菜单ID
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: 服务器内部错误
          schema:
            $ref: '#/definitions/response.Response'
      summary: 从角色移除菜单
      tags:
      - RBAC-角色菜单管理
  /rbac/roles/{role_id}/permissions/{permission_id}:
    delete:
      consumes:
      - application/json
      description: 从指定角色移除指定权限
      parameters:
      - description: 角色ID
        in: path
        name: role_id
        required: true
        type: integer
      - description: 权限ID
        in: path
        name: permission_id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "204":
          description: 成功移除权限
          schema:
            $ref: '#/definitions/response.Response'
        "400":
          description: 无效的角色ID或权限ID
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: 服务器内部错误
          schema:
            $ref: '#/definitions/response.Response'
      summary: 从角色移除权限
      tags:
      - RBAC-角色权限管理
  /rbac/user-roles:
    post:
      consumes:
      - application/json
      description: 为指定用户分配角色
      parameters:
      - description: 用户角色信息
        in: body
        name: userRole
        required: true
        schema:
          $ref: '#/definitions/rbac.UserRole'
      produces:
      - application/json
      responses:
        "201":
          description: 成功分配角色
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                data:
                  $ref: '#/definitions/rbac.UserRole'
              type: object
        "400":
          description: 请求参数错误
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: 服务器内部错误
          schema:
            $ref: '#/definitions/response.Response'
      summary: 分配角色给用户
      tags:
      - RBAC-用户角色管理
  /rbac/users/{id}/roles:
    get:
      consumes:
      - application/json
      description: 获取指定用户的所有角色
      parameters:
      - description: 用户ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: 成功获取用户角色
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                data:
                  items:
                    $ref: '#/definitions/rbac.UserRole'
                  type: array
              type: object
        "400":
          description: 无效的用户ID
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: 服务器内部错误
          schema:
            $ref: '#/definitions/response.Response'
      summary: 获取用户角色
      tags:
      - RBAC-用户角色管理
  /rbac/users/{user_id}/roles/{role_id}:
    delete:
      consumes:
      - application/json
      description: 从指定用户移除指定角色
      parameters:
      - description: 用户ID
        in: path
        name: user_id
        required: true
        type: integer
      - description: 角色ID
        in: path
        name: role_id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "204":
          description: 成功移除角色
          schema:
            $ref: '#/definitions/response.Response'
        "400":
          description: 无效的用户ID或角色ID
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: 服务器内部错误
          schema:
            $ref: '#/definitions/response.Response'
      summary: 从用户移除角色
      tags:
      - RBAC-用户角色管理
  /user/login:
    post:
      consumes:
      - application/json
      description: 用户登录并获取JWT令牌
      parameters:
      - description: 用户登录信息
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/user.LoginRequest'
      produces:
      - application/json
      responses:
        "200":
          description: 登录成功返回token
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                data:
                  additionalProperties:
                    type: string
                  type: object
              type: object
        "400":
          description: 请求参数错误
          schema:
            $ref: '#/definitions/response.Response'
        "401":
          description: 用户名或密码错误
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: 服务器内部错误
          schema:
            $ref: '#/definitions/response.Response'
      summary: 用户登录
      tags:
      - 用户
  /user/profile:
    get:
      consumes:
      - application/json
      description: 获取当前登录用户的个人资料
      produces:
      - application/json
      responses:
        "200":
          description: 成功返回用户信息
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                data:
                  $ref: '#/definitions/model.User'
              type: object
        "401":
          description: 未授权
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: 服务器内部错误
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - ApiKeyAuth: []
      summary: 获取用户个人资料
      tags:
      - 用户
  /user/register:
    post:
      consumes:
      - application/json
      description: 创建新用户账号
      parameters:
      - description: 用户注册信息
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/user.RegisterRequest'
      produces:
      - application/json
      responses:
        "200":
          description: 注册成功返回用户信息
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                data:
                  $ref: '#/definitions/model.User'
              type: object
        "400":
          description: 请求参数错误
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: 服务器内部错误
          schema:
            $ref: '#/definitions/response.Response'
      summary: 用户注册
      tags:
      - 用户
swagger: "2.0"
