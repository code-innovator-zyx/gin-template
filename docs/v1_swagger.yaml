basePath: /api/v1
definitions:
  model.User:
    description: 用户信息模型
    properties:
      avatar:
        example: https://example.com/avatar.jpg
        type: string
      created_at:
        example: "2023-01-01T00:00:00Z"
        type: string
      email:
        example: john@example.com
        type: string
      id:
        example: 1
        type: integer
      nickname:
        example: John Doe
        type: string
      status:
        example: 1
        type: integer
      updated_at:
        example: "2023-01-01T00:00:00Z"
        type: string
      username:
        example: johndoe
        type: string
    type: object
  response.Response:
    properties:
      code:
        description: 业务状态码
        type: integer
      data:
        description: 数据
      message:
        description: 提示信息
        type: string
    type: object
  user.LoginRequest:
    properties:
      password:
        example: password123
        type: string
      username:
        example: johndoe
        type: string
    required:
    - password
    - username
    type: object
  user.RegisterRequest:
    properties:
      email:
        example: john@example.com
        type: string
      nickname:
        example: John Doe
        type: string
      password:
        example: password123
        type: string
      username:
        example: johndoe
        type: string
    required:
    - email
    - password
    - username
    type: object
info:
  contact:
    email: support@swagger.io
    name: API Support
    url: http://www.swagger.io/support
  description: This is a sample server.
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  termsOfService: http://swagger.io/terms/
  title: Swagger Example API
  version: "1.0"
paths:
  /health:
    get:
      consumes:
      - application/json
      description: 用于检查API服务是否正常运行
      produces:
      - application/json
      responses:
        "200":
          description: 返回服务状态
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                data:
                  additionalProperties:
                    type: string
                  type: object
              type: object
      summary: 健康检查接口
      tags:
      - 系统
  /user/login:
    post:
      consumes:
      - application/json
      description: 用户登录并获取JWT令牌
      parameters:
      - description: 用户登录信息
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/user.LoginRequest'
      produces:
      - application/json
      responses:
        "200":
          description: 登录成功返回token
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                data:
                  additionalProperties:
                    type: string
                  type: object
              type: object
        "400":
          description: 请求参数错误
          schema:
            $ref: '#/definitions/response.Response'
        "401":
          description: 用户名或密码错误
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: 服务器内部错误
          schema:
            $ref: '#/definitions/response.Response'
      summary: 用户登录
      tags:
      - 用户
  /user/profile:
    get:
      consumes:
      - application/json
      description: 获取当前登录用户的个人资料
      produces:
      - application/json
      responses:
        "200":
          description: 成功返回用户信息
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                data:
                  $ref: '#/definitions/model.User'
              type: object
        "401":
          description: 未授权
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: 服务器内部错误
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - ApiKeyAuth: []
      summary: 获取用户个人资料
      tags:
      - 用户
  /user/register:
    post:
      consumes:
      - application/json
      description: 创建新用户账号
      parameters:
      - description: 用户注册信息
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/user.RegisterRequest'
      produces:
      - application/json
      responses:
        "200":
          description: 注册成功返回用户信息
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                data:
                  $ref: '#/definitions/model.User'
              type: object
        "400":
          description: 请求参数错误
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: 服务器内部错误
          schema:
            $ref: '#/definitions/response.Response'
      summary: 用户注册
      tags:
      - 用户
swagger: "2.0"
